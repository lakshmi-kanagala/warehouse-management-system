package com.drakes.itsfresh.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.drakes.itsfresh.model.Store;
import com.drakes.itsfresh.service.StoreService;

@RestController
@RequestMapping("/stores")
public class StoreController {
	
	@Autowired
	private StoreService storeService;

	@GetMapping("/{storeId}")
	public ResponseEntity<Store> getStore(@PathVariable Long storeId) {
		return ResponseEntity.ok(storeService.getStore(storeId));
		
	}
	
	@GetMapping
	public ResponseEntity<List<Store>> getStores() {
		return ResponseEntity.ok(storeService.getStores());
	}
	
	@PutMapping
	public ResponseEntity<Store> updateStore(@RequestBody Store store){
		return ResponseEntity.ok(storeService.updateStore(store));
	}
	
	@DeleteMapping("{/{storeId}")
	public ResponseEntity<Void> deleteStore(@PathVariable Long id){
		if(storeService.deleteStore(id))
			return ResponseEntity.noContent().build();
		else
			return ResponseEntity.notFound().build();
	}
	/**
	 * 
	 * @param store
	 * @return
	 */
	@PostMapping
	public ResponseEntity<Store> createStore(@RequestBody Store store){
		 Store created = storeService.createStore(store);
		return ResponseEntity.ok(created);
	}
/**
 * 
 * @param stores
 * @return
 */
	@PostMapping("/batch")
	public ResponseEntity<List<Store>> createStores(@RequestBody List<Store> stores){
		 List<Store> createdStores = storeService.createStores(stores);
		 return ResponseEntity.ok(createdStores);
	}

	
}
